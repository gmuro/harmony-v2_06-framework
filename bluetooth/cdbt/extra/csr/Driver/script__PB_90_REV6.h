//-------------------------------------------------------------------
// DO NOT MODIFY THIS FILE!
// This file was machine generated by the make_patch_script.pl script
//-------------------------------------------------------------------

#ifndef __BTX_CSR_PATCH_SCRIPT_INCLUDED__
#define __BTX_CSR_PATCH_SCRIPT_INCLUDED__

#ifdef __cplusplus
extern "C" {
#endif

// =============================================================================
// 
// CSR tracking information, report this in case of problems:
//   $Revision: #6 $
//   Built Mon Oct 25 13:56:44 2010 GMT
//   Checked-in $DateTime: 2010/10/25 15:00:31 $
//   $File: //depot/bc/gemini-3/dev/patches/6817/pb-90.psr $
// 
// Patch is for build 6817 gem_5hci_rom_bt3.0_gemini-3_1003261729_encr128
// 
// Issues patched: B-80744, B-81790, B-82370, B-82487, B-82777, B-83530,
//                 B-87000, B-88310, B-91207
// 
// Documentation from pb-90.pb
// ---------------------------
// 
// General purpose patch and PSKEY bundle for CSR8810/CSR8815 A04 CSP Packages.
// 
// Documentation from bt_pskeys.pb
// -------------------------------
// 
// Issues patched: B-81790, B-82370, B-82487, B-88310
// 
// Non-default PSKEY settings aimed at improving Bluetooth performance.
// These are recommended for all users of this device regardless of
// package or application.
// 
// Note that some of these settings may depend on the presence of other
// PSKEYs and/or patches. 
// 
// Documentation from patch_lna_bias_c.c
// -------------------------------------
// 
// Issues patched: B-82777
// 
// Receiver desensitisation observed on channels that are multiples of the 
// reference (crystal) frequency on BC8810.
// 
// Documentation from patch_lna_bias_asm.xap
// -----------------------------------------
// 
// Issues patched: B-82777
// 
// Receiver desensitisation observed on channels that are multiples of the 
// reference (crystal) frequency on BC8810.
// 
// Documentation from patch_lo_injection.xap
// -----------------------------------------
// 
// Issues patched: B-83530
// 
// Use High LO injection side for transmit on channel 0.
// 
// Documentation from patch_radio_trim.xap
// ---------------------------------------
// 
// Issues patched: B-87000
// 
// On BlueCore 7 disabling tx with bccmd caused higher than expected power
// consumption. This was due to the BlueCore continually attempting to trim the
// bluetooth radio but not being able to beacuse tx was disabled.
// 
// Documentation from patch_pcm_reset.xap
// --------------------------------------
// 
// Issues patched: B-80744
// 
// The PCM hardware block was not being properly reset for either PCM port. 
// 
// Documentation from patch_hostio_txseq_panic_debug.xap
// -----------------------------------------------------
// 
// Issues patched: B-91207
// 
// Prevent retransmission if a corresponding ack is received while waiting
// for host wakeup after the packet is scheduled
// 
// Version information for input files
// -----------------------------------
// 
// Created by patchmaker.pl Revision: #1  Date: 2009/12/07 
// 
// Input file: pb-90.pb
// Depot file: //depot/bc/gemini-3/dev/patches/6817/pb-90.pb
// File revision: 5
// 
// Input file: pb-84-90-csp-common.pb
// Depot file: //depot/bc/gemini-3/dev/patches/6817/pb-84-90-csp-common.pb
// File revision: 2
// 
// Input file: common.pb
// Depot file: //depot/bc/gemini-3/dev/patches/6817/common.pb
// File revision: 2
// 
// Input file: bt_pskeys.pb
// Depot file: //depot/bc/gemini-3/dev/patches/6817/bt_pskeys.pb
// File revision: 11
// 
// Input file: patch_lna_bias_c.c
// Depot file: //depot/bc/gemini-3/dev/patches/6817/patch_lna_bias_c.c
// File revision: 2
// 
// Input file: patch_lna_bias_asm.xap
// Depot file: //depot/bc/gemini-3/dev/patches/6817/patch_lna_bias_asm.xap
// File revision: 4
// 
// Input file: ../patch_utils.inc
// Depot file: //depot/bc/gemini-3/dev/patches/patch_utils.inc
// File revision: 1
// 
// Input file: patch_lo_injection.xap
// Depot file: //depot/bc/gemini-3/dev/patches/6817/patch_lo_injection.xap
// File revision: 2
// 
// Input file: patch_radio_trim.xap
// Depot file: //depot/bc/gemini-3/dev/patches/6817/patch_radio_trim.xap
// File revision: 3
// 
// Input file: patch_pcm_reset.xap
// Depot file: //depot/bc/gemini-3/dev/patches/6817/patch_pcm_reset.xap
// File revision: 5
// 
// Input file: patch_hostio_txseq_panic_debug.xap
// Depot file: //depot/bc/gemini-3/dev/patches/6817/patch_hostio_txseq_panic_debug.xap
// File revision: 4
// explicit, PSKEY_RX_MR_SAMP_CONFIG (0x003c, 60), 1 words
static const bt_byte packet1[] = {
    H(0x003c, 1, 1), 
    W(0x1426), 

};

// explicit, PSKEY_TX_OFFSET_HALF_MHZ (0x0217, 535), 1 words
static const bt_byte packet2[] = {
    H(0x0217, 1, 2), 
    W(0xffff), 

};

// explicit, PSKEY_TEMPERATURE_VS_DELTA_TX_BB_MR_PAYLOAD (0x03aa, 938), 4 words
static const bt_byte packet3[] = {
    H(0x03aa, 4, 3), 
    W(0xffd8), W(0x0010), W(0x0014), W(0x0000), 

};

// explicit, PSKEY_TEMPERATURE_VS_DELTA_TX_BB_MR_HEADER (0x03ab, 939), 4 words
static const bt_byte packet4[] = {
    H(0x03ab, 4, 4), 
    W(0xffd8), W(0x000b), W(0x0014), W(0x0000), 

};

// explicit, PSKEY_TEMPERATURE_VS_DELTA_TX_BB (0x03d8, 984), 4 words
static const bt_byte packet5[] = {
    H(0x03d8, 4, 5), 
    W(0xffd8), W(0x0017), W(0x0014), W(0x0000), 

};

// explicit, PSKEY_TEMPERATURE_VS_DELTA_INTERNAL_PA (0x03da, 986), 4 words
static const bt_byte packet6[] = {
    H(0x03da, 4, 6), 
    W(0xffd8), W(0xfffc), W(0x0014), W(0x0000), 

};

// patch_hardware_0, PSKEY_PATCH50 (0x212c, 8492), 39 words
static const bt_byte packet7[] = {
    H(0x212c, 39, 7), 
    W(0x0000), W(0x57dc), W(0x0118), W(0xff2b), W(0xff0e), W(0x2400), W(0xb418), W(0x009e), W(0x011b), W(0x2c16), W(0x0900), W(0x6234), W(0xec00), W(0x9e85), W(0x0df4), W(0xec00), W(0x9f85), W(0x0af4), W(0xec00), W(0xa085), W(0x07f4), W(0xec00), W(0xa185), W(0x04f4), W(0xec00), W(0xa285), W(0x06f0), W(0xf000), W(0x1c15), W(0x07b4), W(0xf000), W(0x1c25), W(0x0018), W(0xff2b), W(0xff0e), W(0x5800), W(0xdf18), W(0x00e2), W(0x10f9), 

};

// patch_hardware_1, PSKEY_PATCH51 (0x212d, 8493), 13 words
static const bt_byte packet8[] = {
    H(0x212d, 13, 8), 
    W(0x0000), W(0xf95f), W(0xe099), W(0x03f4), W(0x0214), W(0x8f0f), W(0x0018), W(0xff2b), W(0xff0e), W(0xf900), W(0x6518), W(0x00e2), W(0x4e7a), 

};

// patch_hardware_13, PSKEY_PATCH63 (0x2139, 8505), 16 words
static const bt_byte packet9[] = {
    H(0x2139, 16, 9), 
    W(0x0000), W(0xd296), W(0xe000), W(0xbf15), W(0xec00), W(0xa425), W(0xe000), W(0xc115), W(0x0027), W(0x0018), W(0xff2b), W(0xff0e), W(0xd300), W(0x9918), W(0x00e2), W(0x0c89), 

};

// patch_hardware_14, PSKEY_PATCH64 (0x213a, 8506), 33 words
static const bt_byte packet10[] = {
    H(0x213a, 33, 10), 
    W(0x0000), W(0xd2d0), W(0x0017), W(0xec00), W(0xa485), W(0x12f0), W(0xe000), W(0xea15), W(0x0ff4), W(0x0018), W(0xff2b), W(0xff0e), W(0x7d00), W(0x4818), W(0x009e), W(0x0014), W(0xe000), W(0xea25), W(0xec00), W(0xa315), W(0x0134), W(0xec00), W(0xa325), W(0xe000), W(0xd815), W(0x0134), W(0x0018), W(0xff2b), W(0xff0e), W(0xd300), W(0xd318), W(0x00e2), W(0xbe3a), 

};

// patch_hardware_15, PSKEY_PATCH65 (0x213b, 8507), 64 words
static const bt_byte packet11[] = {
    H(0x213b, 64, 11), 
    W(0x0001), W(0x3f38), W(0xf200), W(0x1718), W(0x0214), W(0x0226), W(0x0100), W(0x0114), W(0x0326), W(0x0114), W(0x0010), W(0x0218), W(0xff2b), W(0xff0e), W(0x6000), W(0xf918), W(0x009e), W(0xf200), W(0x1718), W(0xfa00), W(0x0211), W(0x03b0), W(0xfa00), W(0x0221), W(0x1414), W(0xff34), W(0xfff0), W(0x0800), W(0x0014), W(0x0026), W(0x1414), W(0xff34), W(0xfff0), W(0x0026), W(0xfcc0), W(0xfa00), W(0x0221), W(0x0226), W(0x0326), W(0x0010), W(0x0218), W(0xff2b), W(0xff0e), W(0x6000), W(0xf918), W(0x009e), W(0xf200), W(0x1718), W(0xf200), W(0xf315), W(0x07f0), W(0x0110), W(0xf200), W(0xf321), W(0x0026), W(0x0126), W(0xcce0), W(0x0118), W(0xff2b), W(0xff0e), W(0x3f00), W(0x6518), W(0x00e2), W(0x931f), 

};

// explicit, PSKEY_BT_TX_MIXER_CTRIM_OFFSET (0x2175, 8565), 5 words
static const bt_byte packet12[] = {
    H(0x2175, 5, 12), 
    W(0x0000), W(0x0000), W(0x0000), W(0x0000), W(0x0000), 

};

// explicit, PSKEY_BT_ANA_TX_MIXER_CONFIG (0x218c, 8588), 1 words
static const bt_byte packet13[] = {
    H(0x218c, 1, 13), 
    W(0x0072), 

};

// explicit, PSKEY_RX_ADC_CONFIG (0x21ad, 8621), 5 words
static const bt_byte packet14[] = {
    H(0x21ad, 5, 14), 
    W(0x3150), W(0x0040), W(0x0725), W(0x0f15), W(0x0c1b), 

};

// patch_bc_boot, PSKEY_PATCH101 (0x21f5, 8693), 58 words
static const bt_byte packet15[] = {
    H(0x21f5, 58, 15), 
    W(0xfe0b), W(0xe300), W(0x8215), W(0x0010), W(0x0009), W(0x6494), W(0xf925), W(0x5e00), W(0xd414), W(0x0010), W(0x0009), W(0xf995), W(0xf825), W(0x6100), W(0xe014), W(0x0010), W(0x0009), W(0xf995), W(0xfb25), W(0xf815), W(0xf991), W(0x0534), W(0xfa25), W(0xf819), W(0xff2b), W(0x0010), W(0xf821), W(0x1ae0), W(0xfa15), W(0x0010), W(0x0009), W(0x0a94), W(0xe111), W(0xf700), W(0x9e34), W(0x4e84), W(0x022c), W(0x0ae0), W(0xf815), W(0x0484), W(0x022c), W(0x06e0), W(0xf819), W(0xec00), W(0x9e22), W(0x0138), W(0xf829), W(0xff13), W(0x0130), W(0xff23), W(0xfa15), W(0xf935), W(0xfa25), W(0xff1b), W(0xfb89), W(0xe52c), W(0xfe0f), W(0xe266), 

};

// patch_hal_lo_settings_shared_patchpoint, PSKEY_PATCH146 (0x2222, 8738), 9 words
static const bt_byte packet16[] = {
    H(0x2222, 9, 16), 
    W(0x0300), W(0x5388), W(0x00f2), W(0xef00), W(0x1d14), W(0xe400), W(0x7825), W(0x00e2), W(0x5a9e), 

};

// explicit, PSKEY_RSSI_PREFERRED_VALUES (0x22ec, 8940), 5 words
static const bt_byte packet17[] = {
    H(0x22ec, 5, 17), 
    W(0x0000), W(0x0003), W(0x0003), W(0x03d0), W(0x0000), 

};

// explicit, PSKEY_BT_POWER_TABLE_V0 (0x241a, 9242), 40 words
static const bt_byte packet18[] = {
    H(0x241a, 40, 18), 
    W(0x2718), W(0x0050), W(0x2c28), W(0x0050), W(0xec00), W(0x2918), W(0x0040), W(0x2e28), W(0x0040), W(0xf000), W(0x2818), W(0x0030), W(0x2c28), W(0x0030), W(0xf400), W(0x2818), W(0x0020), W(0x2c28), W(0x0020), W(0xf800), W(0x2918), W(0x0010), W(0x2d28), W(0x0010), W(0xfc00), W(0x2d1a), W(0x0000), W(0x302a), W(0x0000), W(0x0000), W(0x365c), W(0x0000), W(0x386c), W(0x0000), W(0x0400), W(0x3fff), W(0x0000), W(0x3fff), W(0x0000), W(0x0800), 

};

static const bt_byte* const packets[] = {
    packet1,
    packet2,
    packet3,
    packet4,
    packet5,
    packet6,
    packet7,
    packet8,
    packet9,
    packet10,
    packet11,
    packet12,
    packet13,
    packet14,
    packet15,
    packet16,
    packet17,
    packet18
};

#define PACKET_COUNT 18

#ifdef __cplusplus
}
#endif

#endif // __BTX_CSR_PATCH_SCRIPT_INCLUDED__

//-------------------------------------------------------------------
// END OF GENERATED FILE
//-------------------------------------------------------------------
