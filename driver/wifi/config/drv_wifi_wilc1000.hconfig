enum WILC1000_DRIVER_MODE_LIST
    "Ethernet Mode"

enum WILC1000_NETWORK_TYPE_LIST
    "Infrastructure" || "SoftAP"

enum WILC1000_INFRASTRUCTURE_SECURITY_MODE_LIST
    "Open" || "WEP-40 (64-bit)" || "WEP-104 (128-bit)" || "WPA-PSK/WPA2-PSK Auto" || "WPS Push Button" || "WPS PIN"

enum WILC1000_SOFTAP_SECURITY_MODE_LIST
    "Open" || "WEP-40 (64-bit)" || "WEP-104 (128-bit)" || "WPA-PSK/WPA2-PSK Auto"

config WILC1000_DRIVER_MODE
    string "Run Wi-Fi Driver in"
    depends on USE_DRV_WIFI
    range WILC1000_DRIVER_MODE_LIST
    default "Ethernet Mode"
        select USE_TCPIP_STACK_NEEDED if "Ethernet Mode"
    ---help---
Ethernet Mode works with a TCP/IP stack outside of the WILC1000 module, which is Harmony TCP/IP stack in the current case.
    ---endhelp---

# Select "Use TCP/IP Stack?".
config WILC1000_USE_TCPIP_STACK
    bool
    depends on USE_DRV_WIFI
    default y if WILC1000_DRIVER_MODE = "Ethernet Mode"
    default n if WILC1000_DRIVER_MODE != "Ethernet Mode"
    select USE_TCPIP_STACK_NEEDED

config WILC1000_FW_UPDATE_OVER_SERIAL
    bool "Update Wi-Fi Module Firmware over Serial Port"
    depends on USE_DRV_WIFI && WILC1000_DRIVER_MODE = "Ethernet Mode"
    default n
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

menu "RTOS Configuration"
    depends on USE_DRV_WIFI
    depends on USE_3RDPARTY_RTOS

comment "For WILC1000, all RTOS Tasks must be Standalone."

config WILC1000_RTOS_TASK
    string "Run Wi-Fi Driver RTOS Task as"
    depends on 3RDPARTY_RTOS_USED = "FreeRTOS"
    range 3RDPARTY_RTOS_SYS_TASKS_OPTIONS
    default "Standalone"

config WILC1000_RTOS_TASK_SIZE
    int "Task Size"
    depends on WILC1000_RTOS_TASK = "Standalone"
    default 2048

config WILC1000_RTOS_TASK_PRIORITY
    int "Task Priority"
    depends on WILC1000_RTOS_TASK = "Standalone"
    default 2

config WILC1000_RTOS_TASK_DELAY
    int "Task Delay"
    depends on WILC1000_RTOS_TASK = "Standalone"
    default 1
endmenu

config WILC1000_CHIP_EN_PORT_CHANNEL
    string "WILC1000 Chip Enable Pin Port Channel"
    depends on USE_DRV_WIFI
    range DRV_WIFI_PORT_CHANNEL_LIST
    default 'A'
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_CHIP_EN_BIT_POS
    int "WILC1000 Chip Enable Pin Bit Position"
    depends on USE_DRV_WIFI
    range 0 15
    default 0
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_IRQ_PORT_CHANNEL
    string "WILC1000 IRQ Pin Port Channel"
    depends on USE_DRV_WIFI
    range DRV_WIFI_PORT_CHANNEL_LIST
    default 'A'
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_IRQ_BIT_POS
    int "WILC1000 IRQ Pin Bit Position"
    depends on USE_DRV_WIFI
    range 0 15
    default 0
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_RESET_PORT_CHANNEL
    string "WILC1000 Reset Pin Port Channel"
    depends on USE_DRV_WIFI
    range DRV_WIFI_PORT_CHANNEL_LIST
    default 'A'
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_RESET_BIT_POS
    int "WILC1000 Reset Pin Bit Position"
    depends on USE_DRV_WIFI
    range 0 15
    default 0
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_SPI_SS_PORT_CHANNEL
    string "WILC1000 SPI Slave Select Pin Port Channel"
    depends on USE_DRV_WIFI
    range DRV_WIFI_PORT_CHANNEL_LIST
    default 'A'
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_SPI_SS_BIT_POS
    int "WILC1000 SPI Slave Select Pin Bit Position"
    depends on USE_DRV_WIFI
    range 0 15
    default 0
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

ifblock WILC1000_DRIVER_MODE = "Ethernet Mode"

config WILC1000_NETWORK_TYPE
    string "Wi-Fi Network Type"
    depends on USE_DRV_WIFI
    range WILC1000_NETWORK_TYPE_LIST
    default "Infrastructure"
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_SOFTAP_OPERATING_CHANNEL
    int "Wi-Fi Operating Channel"
    depends on USE_DRV_WIFI && WILC1000_NETWORK_TYPE = "SoftAP"
    range 1 11
    default 6
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_INFRASTRUCTURE_SECURITY_MODE
    string "Wi-Fi Security Mode"
    depends on USE_DRV_WIFI && WILC1000_NETWORK_TYPE = "Infrastructure"
    range WILC1000_INFRASTRUCTURE_SECURITY_MODE_LIST
    default "Open"
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_SOFTAP_SECURITY_MODE
    string "Wi-Fi Security Mode"
    depends on USE_DRV_WIFI && WILC1000_NETWORK_TYPE = "SoftAP"
    range WILC1000_SOFTAP_SECURITY_MODE_LIST
    default "Open"
    ---help---
    IDH_HTML_WILC1000_Wi_Fi_Driver_Library
    ---endhelp---

config WILC1000_SSID
    string "Wi-Fi SSID"
    depends on USE_DRV_WIFI && WILC1000_INFRASTRUCTURE_SECURITY_MODE != "WPS Push Button"
    default "MicrochipDemoApp" if WILC1000_NETWORK_TYPE = "Infrastructure"
    default "MCHPSoftAP" if WILC1000_NETWORK_TYPE = "SoftAP"
    ---help---
The SSID should not contain more than 32 ASCII characters. Usually, the SSID can contain space charactcter.
But in this demo, you should not put space character in the SSID.
    ---endhelp---

config WILC1000_WEP_KEY_40
    string "Wi-Fi WEP-40 (64-bit) Key"
    depends on USE_DRV_WIFI &&
        (WILC1000_INFRASTRUCTURE_SECURITY_MODE = "WEP-40 (64-bit)" ||
         WILC1000_SOFTAP_SECURITY_MODE = "WEP-40 (64-bit)")
    default "5AFB6C8E77"
    ---help---
Please visit http://www.wepkey.com/ to generate the key. For 64-bit key, please always use the 1st one. Others are not supported.
The 64-bit key should contain exact 10 ASCII characters.
    ---endhelp---

config WILC1000_WEP_KEY_104
    string "Wi-Fi WEP-104 (128-bit) Key"
    depends on USE_DRV_WIFI &&
        (WILC1000_INFRASTRUCTURE_SECURITY_MODE = "WEP-104 (128-bit)" ||
         WILC1000_SOFTAP_SECURITY_MODE = "WEP-104 (128-bit)")
    default "90E96780C739409DA50034FCAA"
    ---help---
Please visit http://www.wepkey.com/ to generate the key. The 128-bit key should contain exact 26 ASCII characters.
    ---endhelp---

config WILC1000_WPA_PASS_PHRASE
    string "Wi-Fi WPA-PSK or WPA2-PSK Pass Phrase"
    depends on USE_DRV_WIFI &&
        (WILC1000_INFRASTRUCTURE_SECURITY_MODE = "WPA-PSK/WPA2-PSK Auto" ||
         WILC1000_SOFTAP_SECURITY_MODE = "WPA-PSK/WPA2-PSK Auto")
    default "Microchip 802.11 Secret PSK Password"
    ---help---
The WPA passphrase can go from 8 to 63 ASCII characters.
    ---endhelp---

config WILC1000_WPS_PIN
    string "Wi-Fi WPS PIN"
    depends on USE_DRV_WIFI && WILC1000_INFRASTRUCTURE_SECURITY_MODE = "WPS PIN"
    default "12390212"
    ---help---
An example PIN.
The last digit is the checksum of first 7 digits.
    ---endhelp---

endif

add "<#include \"/framework/driver/wifi/templates/drv_wifi.h.ftl\">" to list SYSTEM_CONFIG_H_DRIVER_CONFIGURATION
add "<#include \"/framework/driver/wifi/templates/drv_wifi_init.c.ftl\">" to list SYSTEM_INIT_C_SYS_INITIALIZE_DRIVERS
add "<#include \"/framework/driver/wifi/templates/drv_wifi_tasks.c.ftl\">" to list SYSTEM_TASKS_C_CALL_DRIVER_TASKS

file WILC1000_TASK_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_task.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_task.h"
file WILC_NM_COMMON_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include/nm_common.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include/nm_common.h"
file WILC_NM_DEBUG_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include/nm_debug.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include/nm_debug.h"
file WILC_WIFI_FIRMWARE_1000B_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include/wifi_firmware_1000b.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include/wifi_firmware_1000b.h"
file WILC_M2M_PERIPH_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include/m2m_periph.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include/m2m_periph.h"
file WILC_M2M_TYPES_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include/m2m_types.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include/m2m_types.h"
file WILC_M2M_WIFI_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include/m2m_wifi.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include/m2m_wifi.h"
file WILC_M2M_HIF_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_hif.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_hif.h"
file WILC_NMASIC_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmasic.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmasic.h"
file WILC_NMBUS_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmbus.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmbus.h"
file WILC_NMDRV_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmdrv.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmdrv.h"
file WILC_NMSPI_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmspi.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmspi.h"
file WILC_SPI_FLASH_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/include/spi_flash.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/include/spi_flash.h"
file WILC_SPI_FLASH_MAP_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/include/spi_flash_map.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/include/spi_flash_map.h"

ifblock WILC1000_DRIVER_MODE = "Ethernet Mode"
file WDRV_WILC1000_API_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/include/wdrv_wilc1000_api.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/include/wdrv_wilc1000_api.h"
file WDRV_WILC1000_COMMON_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/include/wdrv_wilc1000_common.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/include/wdrv_wilc1000_common.h"
file WDRV_WILC1000_STUB_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/include/wdrv_wilc1000_stub.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/include/wdrv_wilc1000_stub.h"
file WDRV_WILC1000_IWPRIV_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/include/wdrv_wilc1000_iwpriv.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver/include/wdrv_wilc1000_iwpriv.h"
file WDRV_WILC1000_MAIN_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/include/wdrv_wilc1000_main.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver/include/wdrv_wilc1000_main.h"
file WDRV_WILC1000_SCAN_HELPER_H "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/include/wdrv_wilc1000_scan_helper.h" to "$PROJECT_HEADER_FILES/framework/driver/wifi/wilc1000/wireless_driver/include/wdrv_wilc1000_scan_helper.h"
endif


file WDRV_WILC1000_CONSOLE_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/dev/console/wdrv_wilc1000_console.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/dev/console/wdrv_wilc1000_console.c"
file WDRV_WILC1000_EINT_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/dev/gpio/wdrv_wilc1000_eint.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/dev/gpio/wdrv_wilc1000_eint.c"
file WDRV_WILC1000_GPIO_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/dev/gpio/wdrv_wilc1000_gpio.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/dev/gpio/wdrv_wilc1000_gpio.c"
file WDRV_WILC1000_SPI_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/dev/spi/wdrv_wilc1000_spi.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/dev/spi/wdrv_wilc1000_spi.c"
file WDRV_WILC1000_TIMER_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/dev/timer/wdrv_wilc1000_timer.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/dev/timer/wdrv_wilc1000_timer.c"
file WDRV_WILC1000_OSAL_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/osal/wdrv_wilc1000_osal.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/osal/wdrv_wilc1000_osal.c"
file WDRVEXT_WILC1000_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/wdrvext_wilc1000.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/wdrvext_wilc1000.c"
file WILC1000_FW_UPDATE_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_fw_update.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_fw_update.c"
file WILC1000_TASK_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_task.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_task.c"
file WILC_NM_COMMON_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/common/source/nm_common.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/common/source/nm_common.c"
file WILC_M2M_HIF_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_hif.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_hif.c"
file WILC_M2M_PERIPH_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_periph.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_periph.c"
file WILC_M2M_WIFI_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_wifi.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_wifi.c"
file WILC_NMASIC_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmasic.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmasic.c"
file WILC_NMBUS_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmbus.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmbus.c"
file WILC_NMDRV_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmdrv.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmdrv.c"
file WILC_NMSPI_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmspi.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmspi.c"
file WILC_SPI_FLASH_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/source/spi_flash.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/source/spi_flash.c"

ifblock WILC1000_DRIVER_MODE = "Ethernet Mode"
file WDRV_WILC1000_CLI_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_cli.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_cli.c"
file WDRV_WILC1000_CONFIG_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_config.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_config.c"
file WDRV_WILC1000_CONNMGR_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_connmgr.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_connmgr.c"
file WDRV_WILC1000_EVENTS_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_events.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_events.c"
file WDRV_WILC1000_IWPRIV_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_iwpriv.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_iwpriv.c"
file WDRV_WILC1000_MAIN_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_main.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_main.c"
file WDRV_WILC1000_SCAN_HELPER_C "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_scan_helper.c" to "$PROJECT_SOURCE_FILES/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_scan_helper.c"
endif


compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_01 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/include"
compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_02 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver/include"
compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_03 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension"
compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_04 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/bsp/include"
compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_05 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/bus_wrapper/include"
compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_06 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include"
compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_07 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include"
compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_08 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source"
compiler WDRV_WILC1000_COMPILER_INCLUDEPATH_09 includepath "$HARMONY_VERSION_PATH/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/include"

